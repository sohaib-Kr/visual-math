---
import Lesson from '../../layouts/Lesson.astro';
import * as short from '../../components/blog'
import Exercices from '@/layouts/Exercices.astro';
import ToolTipLink from '../../components/blog/ToolTipLink.astro';
const {Title,SubHead,Paragraph,Part,AnimationFrame,Latex,H,Ex,ExerciceSection,ToolTip}=short
title: "Understanding Topological Interior Concepts"
description: "A brief introduction to the fundamental concept of interior in topology"
pubDate: 2023-11-20
author: "Math Insights"
tags: ["mathematics", "topology", "interior"]
image: "/images/topology-interior.jpg"
draft: false

let exos=
    [
    {
        question:"Which of the following are a loop, a non loop path, or note a path?",
        items:[{
            title:"Item 1",
            options:[
                {title:"option1",description:"loop"},
                {title:"option2",description:"non loop path"},
                {title:"option3",description:"not a path"},
            ],
            solution:1
        },
        {
            title:"Item 2",
            options:[
                {title:"option1",description:"loop"},
                {title:"option2",description:"non loop path"},
                {title:"option3",description:"not a path"},
            ],
            solution:2
        },
        {
            title:"Item 3",
            options:[
                {title:"option1",description:"loop"},
                {title:"option2",description:"non loop path"},
                {title:"option3",description:"not a path"},
        ],
        solution:0
        },
        ]
    },
    {
        question:"Which of the following paths are homotopic?",
        items:[
        {
            title:"Item 1",
            options:[
                {title:"option1",description:"homotopic"},
                {title:"option2",description:"not homotopic"},
            ],
            solution:1
        },
        {
            title:"Item 2",
            options:[
                {title:"option1",description:"homotopic"},
                {title:"option2",description:"not homotopic"},
        ],
        solution:1
        },
        {
            title:"Item 3",
            options:[
                {title:"option1",description:"homotopic"},
                {title:"option2",description:"not homotopic"},
        ],
        solution:0
        },
    ]}
    ]

---

<Lesson>

<Part title="Paths and Loops">
<Title>Exploring the Interior in Topology</Title>

<SubHead>Paths and Loops</SubHead>
<Paragraph>
A <H>path</H> in a <ToolTipLink title="topoSpace">topological space</ToolTipLink> <Latex>X</Latex> is a continuous function <Latex>\gamma \colon [0,1] \to X</Latex>, where <Latex>\gamma(0)</Latex> is the starting point and <Latex>\gamma(1)</Latex> is the endpoint.
A <H>loop</H> is a special kind of path where the start and end points coincide, i.e., <Latex>\gamma(0) = \gamma(1)</Latex>.
</Paragraph>
<AnimationFrame id="pathDefinition" style={{
    width: '110%',
    height: '400px',
    position: 'relative',
    left: '5%',
    top: '50%'
}}/>
</Part>

<Part title="Homotopy and Homotopy Equivalence">
    
<SubHead>Homotopy and Homotopy Equivalence</SubHead>
<Paragraph>
Two paths (or loops) <Latex>\gamma_0</Latex> and <Latex>\gamma_1</Latex> are <H>homotopic</H> if one can be continuously deformed into the other while 
keeping endpoints fixed. Formally, a homotopy is a <ToolTipLink title="continuity">continuous map</ToolTipLink> <Latex>H \colon [0,1] \times [0,1] \to X</Latex> such that <Latex>H(0,t) = \gamma_0(t)</Latex> and <Latex>H(1,t) = \gamma_1(t)</Latex>.

Two spaces <Latex>X</Latex> and <Latex>Y</Latex> are <H>homotopy equivalent</H> if there exist maps <Latex>f \colon X \to Y</Latex> and <Latex>g \colon Y \to X</Latex> such that <Latex>g \circ f</Latex> is homotopic to the identity on <Latex>X</Latex>, and <Latex>f \circ g</Latex> is homotopic to the <ToolTipLink title="identity">identity</ToolTipLink> on <Latex>Y</Latex>.

<Ex>Example:</Ex><ToolTipLink title="disk">A disk <Latex>D^2</Latex></ToolTipLink> is homotopy equivalent to a single point, but <ToolTipLink title="circle">a circle <Latex>S^1</Latex></ToolTipLink> is not.
<AnimationFrame id="homotopicalEqu" style={{
    width: '110%',
    height: '400px',
    position: 'relative',
    left: '5%',
    top: '50%'
}}/>
</Paragraph>
</Part>



<Part title="When Homotopy Fails">
<SubHead>When Homotopy Fails</SubHead>
<Paragraph>
Homotopy cannot always be performed if a space has "holes" or obstructions.

<Ex>Example:</Ex>
<ul>
    <li>A loop around a puncture in <Latex>\mathbb {'{'} R {'}'}^2 \setminus \{'{'}0{'}'}\</Latex> cannot be shrunk to a point.</li>
    <li>A non-contractible loop on a torus (like one that wraps around the central hole) has no homotopy to a constant loop.</li>
</ul>
</Paragraph>
<AnimationFrame id="homotopyWithHole" style={{
    width: '110%',
    height: '400px',
    position: 'relative',
    left: '5%',
    top: '50%'
}}/>
</Part>

<Part title="Fundamental Group">
<SubHead>Fundamental Group</SubHead>
<Paragraph>
The <H>fundamental group</H> <Latex>\pi_1(X, x_0)</Latex> is the set of all homotopy classes of loops based at <Latex>x_0</Latex>, with group operation given by loop concatenation. It captures information about the "holes" in a space.

<Ex>Examples:</Ex>
<ul>
    <li><Latex>\pi_1(\mathbb{'{'}R{'}'}^2) = 0</Latex> (no holes, all loops are contractible).</li>
    <li><Latex>\pi_1(S^1) \cong \mathbb{'{'}Z{'}'}</Latex> (loops are classified by their winding number).</li>
</ul>
</Paragraph>
<AnimationFrame id="fundamentalGroup" style={{
    width: '50%',
    height: '300px',
    position: 'relative',
    left: '50%',
    top: '50%'
}}/>
</Part>
<Part>
    <Title>Fundamental Group</Title>
    <Paragraph>
    The <H>fundamental group</H> <Latex>\pi_1(X, x_0)</Latex> is the set of all homotopy classes of loops based at <Latex>x_0</Latex>, with group operation given by loop concatenation. It captures information about the "holes" in a space.
    
    <Ex>Examples:</Ex>
    <ul>
        <li><Latex>\pi_1(\mathbb{'{'}R{'}'}^2) = 0</Latex> (no holes, all loops are contractible).</li>
        <li><Latex>\pi_1(S^1) \cong \mathbb{'{'}Z{'}'}</Latex> (loops are classified by their winding number).</li>
    </ul>
    </Paragraph>
    <AnimationFrame id="fundamentalGroup1" style={{
        width: '50%',
        height: '300px',
        position: 'relative',
        left: '50%',
        top: '50%'
    }}/>
    </Part>
<Part>
    <Title>Fundamental Group</Title>
    <Paragraph>
    The <H>fundamental group</H> <Latex>\pi_1(X, x_0)</Latex> is the set of all homotopy classes of loops based at <Latex>x_0</Latex>, with group operation given by loop concatenation. It captures information about the "holes" in a space.
    
    <Ex>Examples:</Ex>
    <ul>
        <li><Latex>\pi_1(\mathbb{'{'}R{'}'}^2) = 0</Latex> (no holes, all loops are contractible).</li>
        <li><Latex>\pi_1(S^1) \cong \mathbb{'{'}Z{'}'}</Latex> (loops are classified by their winding number).</li>
    </ul>
    </Paragraph>
    <AnimationFrame id="concatenation" style={{
        width: '50%',
        height: '300px',
        position: 'relative',
        left: '50%',
        top: '50%'
    }}/>
    </Part>
</Lesson>
<Exercices>
    <short.ExerciceSection exercices={exos} client:only/>
</Exercices>

<ToolTip title="topoSpace">
    A topological space is an ordered pair <Latex>(X, \tau)</Latex>, where <Latex>X</Latex> is a set,
    and <Latex>\tau</Latex> (the topology)<br/> is a collection of subsets of <Latex>X</Latex> satisfying the following axioms:
    <ul class="list-disc p-[20px]">

    <li>The empty set <Latex>\emptyset</Latex> and the set <Latex>X</Latex> itself belong to <Latex>\tau</Latex>.</li>
    <li>The union of any (finite or infinite) collection of sets in <Latex>\tau</Latex> also belongs to <Latex>\tau</Latex>.</li>
    <li>The intersection of any finite collection of sets in <Latex>\tau</Latex> also belongs to <Latex>\tau</Latex>.</li>
 </ul>
 </ToolTip>
 <ToolTip title="continuity">
     <p>A function <Latex>f</Latex> is continuous if for every open set <Latex>U</Latex> in the codomain, the preimage <Latex>f^(-1)(U)</Latex> is open in the domain.</p>
     </ToolTip>
<ToolTip title="disk">
    <p>A disk <Latex>D^2</Latex> is a topological space that is homeomorphic to the closed unit disk in the plane.</p>
    </ToolTip>
<ToolTip title="circle">
    <p>A circle <Latex>S^1</Latex> is a topological space that is homeomorphic to the unit circle in the plane.</p>
     </ToolTip>
<ToolTip title="identity">
         <p>The identity function <Latex>id</Latex> is the function that maps every element of a set to itself.</p>
          </ToolTip>
<script>
import { anim as pathDefinition} from "../../lib/lessons/topology/homeomorphism/homotopy/pathDefinition.js";
import { anim as homotopyWithHole} from "../../lib/lessons/topology/homeomorphism/homotopy/homotopyWithHole.js";
import { anim as homotopicalEqu} from "../../lib/lessons/topology/homeomorphism/homotopy/homotopicalEqu.js";
import { anim as fundamentalGroup} from "../../lib/lessons/topology/homeomorphism/homotopy/fundamentalGroup.js";
import { anim as fundamentalGroup1} from "../../lib/lessons/topology/homeomorphism/homotopy/fundamentalGroup1.js";
import { anim as concatenation} from "../../lib/lessons/topology/homeomorphism/homotopy/concatenation.js";
import {exo00,exo01,exo02} from "../../lib/lessons/topology/homeomorphism/homotopy/exercices"
let frames={
    pathDefinition:pathDefinition,
    homotopyWithHole:homotopyWithHole,
    homotopicalEqu:homotopicalEqu,
    fundamentalGroup:fundamentalGroup,
    fundamentalGroup1:fundamentalGroup1,
    concatenation:concatenation
}
// pathDefinition.engine[0]()
// homotopyWithHole.engine[0]()
// homotopicalEqu.engine[0]()
// fundamentalGroup.engine[0]()
// fundamentalGroup1.engine[0]()
// concatenation.engine[0]()
const observer = new MutationObserver(() => {
    if (document.getElementById("exerciceSection")) {
        observer.disconnect();
        exo00().engine[0]()
        exo01().engine[0]()
        exo02().engine[0]()
    }
});
observer.observe(document.body, {
    childList: true,
    subtree: true
});


for (let key in frames) {
  const targetSection = frames[key].vMath.node;
  let isFirstObservation = true;

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (isFirstObservation) {
        isFirstObservation = false;
        return; // Skip the first observation
      }

      if (entry.isIntersecting) {
        console.log("User entered the target section!", key);
        frames[key].vMath.engine[0]();
        observer.disconnect()
      }
    });
  }, {
    threshold: 0.5,
  });

  observer.observe(targetSection);
}
</script>